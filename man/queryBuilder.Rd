% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/queryBuilder.R
\name{queryBuilder}
\alias{queryBuilder}
\title{queryBuilder widget}
\usage{
queryBuilder(
  filters,
  plugins = NULL,
  rules = NULL,
  display_errors = FALSE,
  optgroups = NULL,
  default_filter = NULL,
  sort_filters = FALSE,
  allow_empty = FALSE,
  allow_groups = TRUE,
  conditions = c("AND", "OR"),
  select_placeholder = "------",
  lang = NULL,
  width = NULL,
  height = NULL,
  elementId = NULL
)
}
\arguments{
\item{filters}{list of list specifying the available filters in the builder.
See example for a See https://querybuilder.js.org/#filters
for details on the possible options}

\item{plugins}{list of optional plugins.}

\item{rules}{Initial set of rules.
By default the builder will contain one empty rule}

\item{display_errors}{bool. If \code{TRUE}, when an error occurs on a rule, display an icon with a tooltip
explaining the error.}

\item{optgroups}{List of groups in the filters and operators dropdowns.}

\item{default_filter}{string. The \code{id} of the default filter for any new rule.}

\item{sort_filters}{boolean|function. Sort filters alphabetically, or with a custom JS function.}

\item{allow_empty}{bool. If \code{TRUE}, no error will be thrown if the builder is entirely empty.}

\item{allow_groups}{boolean|int. Number of allowed nested groups. \code{TRUE} for no limit.}

\item{conditions}{string. Array of available group conditions. Use the \code{lang} option to change the label.}

\item{select_placeholder}{string. Label of the "no filter" option.}

\item{lang}{Additional/overwrites translation strings.}

\item{width, height}{Must be a valid CSS unit (like \code{'100\%'},
\code{'400px'}, \code{'auto'}) or a number, which will be coerced to a
string and have \code{'px'} appended.}

\item{elementId}{string. Widget ID.}
}
\description{
Creates the queryBuidler widget. For more information about the options
see https://querybuilder.js.org/#usage
}
\examples{

## Only run examples in interactive R sessions
if (interactive()) {

  ## Define a set of filters

  filters <- list(
    list(
      id = "species",
      label = "Species",
      type = "string",
      input = "select",
      description = "Shift-click to select multiple!",
      values = list("Adelie", "Gentoo", "Chinstrap"),
      multiple = TRUE,
      operators = c("equal", "not_equal", "in", "not_in")
    )
  )

  ## Useage within a shiny app
  library(shiny)
  library(qbr)

  shinyApp(
    ui = fluidPage(
      queryBuilderOutput("qbr",
        width = 800,
        height = 300
      ),
      fluidRow(
        tableOutput("FilterResult")
      )
    ),
    server = function(input, output, session) {
      output$qbr <- renderQueryBuilder({
        queryBuilder(
          filters = filters,
          plugins = list(
            "sortable" = NA,
            "bt-tooltip-errors" = NA,
            "bt-checkbox" = list("color" = "primary"),
            "filter-description" = list("mode" = "bootbox"),
            "unique-filter" = NA
          ),
          display_errors = TRUE,
          allow_empty = FALSE,
          select_placeholder = "###"
        )
      })

      output$FilterResult <- renderTable({
        req(input$qbr_validate)
        filterTable(
          filters = input$qbr_out,
          data = palmerpenguins::penguins,
          output = "table"
        )
      })
    }
  )
}
}
\seealso{
https://querybuilder.js.org/#usage
}
